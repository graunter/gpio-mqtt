#!/bin/sh

### BEGIN INIT INFO
# Provides:          gpio-mqtt
# Required-Start:    $all mosquitto
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Service for controllers pins monitoring and handling
# Description:       Service for controllers pins monitoring and handling
### END INIT INFO
 
NAME=gpio-mqtt
DESC="gpio-mqtt"
WORKING_PATH=/etc/${NAME}
EXE_PATH=/opt/${NAME}
DAEMON="$WORKING_PATH/start.sh"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

. /lib/lsb/init-functions
. /lib/init/vars.sh

 start() {
    if [ -e "/var/run/${NAME}.pid" ];then echo "Failed to start\nThere is pidfile /var/run/${NAME}.pid" >&2;return 1;fi
    echo "Starting $NAME" >&2
    start-stop-daemon --start  --pidfile $PIDFILE --exec $DAEMON >> /dev/null 2>&1
    echo "Service $NAME started" >&2
  }

stop() {
  echo "Stopping $NAME service" >&2
  start-stop-daemon --stop --remove-pidfile --pidfile $PIDFILE --retry=TERM/30/KILL/5 --pidfile $PIDFILE
  echo "Service $NAME stopped" >&2

  echo "Service stopped" >> $WORKING_PATH/${NAME}.log
}

status(){
    if [ "$(ps -ef | grep -v grep | grep ${EXE_PATH}/${NAME} | wc -l)" != "0" ]
    then
        log_success_msg "${NAME} is running"
        echo "${NAME} is running $(ps -ef | grep -v grep | grep ${NAME} | wc -l)" 
        return 0
    else
        log_failure_msg "${NAME} is not running"
        echo "${NAME} is not running"
        return $?
    fi
}

forceStart(){
    stop
    rm -f $PIDFILE
    start
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  status)
    status
    ;;
  force-start)
    forceStart
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|status|force-start}"
esac